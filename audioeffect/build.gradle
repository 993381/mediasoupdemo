apply plugin: 'com.android.library'

// Source of webrtc.
def WEBRTC_INC_PATH = "${projectDir}/deps/webrtc/src"
// Precompiled static libs and jar for webrtc android.
def WEBRTC_LIB_PATH = "${projectDir}/deps/webrtc/lib"

android {
    compileSdkVersion 28
    ndkVersion "20.0.5594570"
    buildToolsVersion "28.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 2
        versionName "1.0.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                // Sets a flag to enable format macro constants for the C compiler.
                cFlags "-D__STDC_FORMAT_MACROS"
                // Sets optional flags for the C++ compiler.
                cppFlags "-fexceptions", "-frtti"

                // "-DANDROID_ALLOW_UNDEFINED_SYMBOLS=true",
                // Passes optional arguments to CMake.
                arguments "-DLIBWEBRTC_INCLUDE_PATH=" + WEBRTC_INC_PATH,
                        "-DLIBWEBRTC_BINARY_PATH=" + WEBRTC_LIB_PATH,
                        "-DANDROID_ARM_NEON=TRUE",
                        "-DANDROID_TOOLCHAIN=clang"
//                        "-DMEDIASOUPCLIENT_BUILD_TESTS=false",
//                        "-DSDPTRANSFORM_BUILD_TESTS=OFF",
//                        "-DSDPTRANSFORM_BUILD_READMEHELPER=OFF",
//                        "-DMEDIASOUPCLIENT_LOG_TRACE=ON",
//                        "-DMEDIASOUPCLIENT_LOG_DEV=ON"
            }
        }

        ndk {
            // Specifies the ABI configurations of your native
            // libraries Gradle should build and package with your APK.
//            abiFilters 'armeabi-v7a', 'arm64-v8a'
            abiFilters 'x86' ,'x86_64', 'armeabi-v7a', 'arm64-v8a'
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        warningsAsErrors true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}